// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(cuid())
  username String    @unique @db.VarChar(50)
  email    String    @unique @db.VarChar(255)
  password String    @db.VarChar(100)
  role     Role      @default(User)
  posts    Post[]
  profile  Profile?
  Comment  Comment[]
}

enum Role {
  ADMIN
  User
}

model Profile {
  id          String  @id @default(cuid())
  displayname String
  bio         String
  profile     String? @default("/avatar-placeholder.png")
  userID      String  @unique
  author      User    @relation(fields: [userID], references: [id], onDelete: Cascade)
}

model Post {
  id            String    @id @default(cuid())
  title         String    @db.VarChar(255)
  slug          String
  featuredImage String?   @default("/login-image.jpg")
  desc          String    @db.Text
  userID        String
  author        User      @relation(fields: [userID], references: [id], onDelete: Cascade)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  Comment       Comment[]
}

model Comment {
  id        String   @id @default(cuid())
  title     String   @db.VarChar(255)
  desc      String   @db.Text
  postID    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  post      Post     @relation(fields: [postID], references: [id], onDelete: Cascade)
  userID    String
  author    User     @relation(fields: [userID], references: [id], onDelete: Cascade)
}
